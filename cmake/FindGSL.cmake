find_program(gsl-config gsl-config)
if(EXISTS "${gsl-config}")
  set(GSL_FOUND 1)
  execute_process(COMMAND ${gsl-config} --version OUTPUT_VARIABLE GSL_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
  execute_process(COMMAND ${gsl-config} --prefix OUTPUT_VARIABLE GSL_PREFIX OUTPUT_STRIP_TRAILING_WHITESPACE)
  execute_process(COMMAND ${gsl-config} --libs OUTPUT_VARIABLE GSL_LIBRARIES OUTPUT_STRIP_TRAILING_WHITESPACE)
  execute_process(COMMAND ${gsl-config} --cflags OUTPUT_VARIABLE GSL_CFLAGS OUTPUT_STRIP_TRAILING_WHITESPACE)
  add_library(GSL SHARED IMPORTED)
  find_library(GSL_LOCATION gsl)
  set_target_properties(GSL PROPERTIES IMPORTED_LOCATION ${GSL_LOCATION})
  set_target_properties(GSL PROPERTIES INTERFACE_LINK_LIBRARIES ${GSL_LIBRARIES})
  set_target_properties(GSL PROPERTIES INTERFACE_COMPILE_OPTIONS "${GSL_INCLUDE_DIRS}")
  if(CMAKE_VERSION VERSION_GREATER "3.0")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${GSL_CFLAGS}")
  endif()
else()
  set(GSL_FOUND 0)
endif()
if(NOT GSL_FOUND AND GSL_FIND_REQUIRED)
  message(FATAL_ERROR "GSL not found")
endif()
if(NOT GSL_FIND_QUIETLY)
  if(GSL_FOUND)
    message(STATUS "Found GSL ${GSL_VERSION}: ${GSL_PREFIX}")
  else()
    message(STATUS "GSL not found")
  endif()
endif()
