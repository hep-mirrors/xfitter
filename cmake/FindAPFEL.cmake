find_program(apfel-config apfel-config PATHS ${CMAKE_SOURCE_DIR}/deps/apfel/bin)
if(EXISTS "${apfel-config}")
  set(APFEL_FOUND 1)
  execute_process(COMMAND ${apfel-config} --version OUTPUT_VARIABLE APFEL_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
  execute_process(COMMAND ${apfel-config} --prefix OUTPUT_VARIABLE APFEL_PREFIX OUTPUT_STRIP_TRAILING_WHITESPACE)
  execute_process(COMMAND ${apfel-config} --libdir OUTPUT_VARIABLE APFEL_LIBRARY_DIRS OUTPUT_STRIP_TRAILING_WHITESPACE)
  execute_process(COMMAND ${apfel-config} --incdir OUTPUT_VARIABLE APFEL_INCLUDE_DIRS OUTPUT_STRIP_TRAILING_WHITESPACE)
  add_library(APFEL SHARED IMPORTED)
  if(APPLE)
    set_target_properties(APFEL PROPERTIES IMPORTED_LOCATION "${APFEL_LIBRARY_DIRS}/libAPFEL.dylib")
  endif()
  if(UNIX AND NOT APPLE)
    set_target_properties(APFEL PROPERTIES IMPORTED_LOCATION "${APFEL_LIBRARY_DIRS}/libAPFEL.so")
  endif()
  set_target_properties(APFEL PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "${APFEL_INCLUDE_DIRS}/")
else()
  set(APFEL_FOUND 0)
endif()
if(NOT APFEL_FOUND AND APFEL_FIND_REQUIRED)
  message(FATAL_ERROR "APFEL not found")
endif()
if(NOT APFEL_FIND_QUIETLY)
  if(APFEL_FOUND)
    message(STATUS "Found APFEL ${APFEL_VERSION}: ${APFEL_PREFIX}")
  else()
    message(STATUS "APFEL not found")
  endif()
endif()
